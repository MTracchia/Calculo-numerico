INSTRUCCIONES PARA LA CONFIGURACION DEL ENTORNO DE CATTLER:

-Previamente instalo estas librerias:
sudo pip3 install django_countries
sudo pip3 install djangorestframework

-instalar mysql y crear una base de datos vacia y un usuario:
el nombre de la base de datos, el usuario y el password estan en settings.py
se pueden importar bases de datos pero no las necesito porque no requiero datos en mi entorno de trabajo
(mucho cuidado con instalar mysql tanto en ubuntu 18.04 como en ubuntu 20.04 - hay ligeras diferencias)

sudo apt install mysql-server
ojo! los usuarios que tengo que crear son dos distintos
el primero el de mysql (le tengo que otorgar los datos de settings.py), luego el de cattler (el usuario de cattler se guarda en la base de datos de mysql-le asgino los datos que yo quiero)
sudo mysql_secure_installation - comando para segurizar la instalacion del root
Una vez que configuro el root, creo el usuario "agrx" y le otorgo todos los privilegios. Luego creo la base de datos "agrx_mvp" y le otorgo todos los privilegios a agrx sobre esa base de datos
por sobre todas sus tablas. (hay que hacer todo esto ultimo estando logueado con el usuario root y no "agrx")
-importante: en cuanto a la contrase침a del usuario agrx tiene que ser igual a la que est치 en settings.py. Si no es la misma, habr치 que modificar el password en ese archivo.

-Algunas librerias que posiblemente tenga que instalar
sudo apt install libmysqlclient-dev
sudo apt install mysql-client --Esta es obligatoria 
pip3 install PyMySQL
sudo apt-get install python3-mysqldb ---Esta es la mas importante porque al instalarla yo no me saltaba el error de "Did you install mysqldb?"

Antes de crear el usuario de django (칩 superusuario) primero hay que ejecutar en consola "/.borrar_migraciones" para borrar las bases de datos, obviamente dentro de la carpeta del archivo raiz manage.py
Luego ejecutar los siguientes comandos:
 -python3 manage.py makemigrations
 -python3 manage.py migrate

agregar en lo ultimo de la lista en agrx_app/admin.py:
"admin.site.register(DatoRFID)"

python3 manage.py makemigrations agrx_app
python3 manage.py migrate


-Todo esto hay que hacerlo con Django ya instalado.




---------------------------------------------
INSTRUCCIONES PARA LA SIMULACION DE PUERTOS EN SERIE (VIRTUALES) PARA EL LECTOR RFID:
-dar permiso al script de bash ejecutando: chmod a+x socat_puertos_serie.sh
-ejecutar el script como ./socat_puertos_serie 
	lo que hay dentro es:  #!/bin/sh
				socat -d -d pty,raw,echo=0 pty,raw,echo=0
una vez ejecutado los puertos se habilitan
-intalar pyserial con: pip3 install pyserial

